id,name,status,progress,total,speed,code,cpu_usage
1,new,Stopped,0,1,1,"import time
import threading
import requests

class TaskThread(threading.Thread):
    def __init__(self, task_id,url):
        super(TaskThread, self).__init__()
        self.task_id = task_id
        self.url = url
    
    def run(self):
      if not stop_event.is_set():
        try:
          response = requests.head(self.url)
          if response.status_code == 200:
            print(f""{self.url} is UP"")
          else:
            print(f""{self.url} is DOWN (Status Code: {response.status_code})"")
        except Exception as e:
          print(e)
          pass
 

   
def count_thread():
    count=0  
    for thread in threading.enumerate():
      if isinstance(thread, TaskThread) and thread.task_id == 1:
            count += 1
    return count


base_url = ""https://www.example{}.com""
num_urls = 200
urls = [base_url.format(i) for i in range(1, num_urls + 1)]
batch_size = max(1, len(urls) // 20)
start_index = int(task.load_progress())
task.update_total_batch(len(urls))

for i in range(start_index, len(urls), batch_size):
  batch = urls[i:i+batch_size]
  for url in batch:
        while count_thread() >= int(task.get_speed()):
            time.sleep(1)
        if stop_event.is_set():
            break
        print(threading.active_count())
        t = TaskThread(1, url)
        t.start()
  task.save_progress(i + batch_size)

",29.4
2,new2,Stopped,0,1,1,"import time


count = 0
while not stop_event.is_set():
  print(count)
  time.sleep(2)
  count=count+1",
